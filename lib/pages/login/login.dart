import 'package:flutter/material.dart';
import 'package:shimbox_app/models/login_data.dart';
import 'package:shimbox_app/models/login_response.dart' as model;
import 'package:shimbox_app/utils/api_service.dart';
import '../root/root.dart';
import 'package:shimbox_app/models/test_user_data.dart'; // üîÑ Ï†ïÏ†Å Ï†ÄÏû•Ïö© UserData

class LoginPage extends StatefulWidget {
  const LoginPage({super.key});

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();

  Future<void> _login() async {
    final loginData = LoginData(
      email: _emailController.text.trim(),
      password: _passwordController.text.trim(),
    );

    final model.LoginResponse? result = await ApiService.loginUser(loginData);
    print('ÏÑúÎ≤Ñ ÏùëÎãµÍ∞í: $result');

    if (result != null) {
      final userData = result.data;

      if (!userData.approved) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(content: Text('‚ùóÏäπÏù∏ÎêòÏßÄ ÏïäÏùÄ Í≥ÑÏ†ïÏûÖÎãàÎã§. Í¥ÄÎ¶¨ÏûêÏóêÍ≤å Î¨∏ÏùòÌïòÏÑ∏Ïöî.')),
        );
        return;
      }

      // ÏäπÏù∏Îêú ÏÇ¨Ïö©ÏûêÏùº Í≤ΩÏö∞ Ï†ïÎ≥¥ Ï†ÄÏû•
      UserData.name = userData.name;
      UserData.token = userData.accessToken;
      UserData.email = loginData.email;

      print('‚úÖ Ï†ÄÏû•Îêú ÏÇ¨Ïö©Ïûê Ïù¥Î¶Ñ: ${UserData.name}');
      print('‚úÖ Ï†ÄÏû•Îêú ÌÜ†ÌÅ∞: ${UserData.token}');

      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => RootPage()),
      );
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('‚ùóÍ≥ÑÏ†ïÏù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÍ±∞ÎÇò ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÌãÄÎ†∏ÏäµÎãàÎã§')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: SafeArea(
        child: Center(
          child: Padding(
            padding: const EdgeInsets.symmetric(horizontal: 45),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                // Î°úÍ≥†
                Image.asset('assets/images/logo.png', height: 55),
                const SizedBox(height: 60),

                // ÏïÑÏù¥Îîî
                const Align(
                  alignment: Alignment.centerLeft,
                  child: Text(
                    'ÏïÑÏù¥Îîî',
                    style: TextStyle(fontWeight: FontWeight.bold),
                  ),
                ),
                TextField(
                  controller: _emailController,
                  decoration: const InputDecoration(
                    isDense: true,
                    contentPadding: EdgeInsets.symmetric(vertical: 10),
                    enabledBorder: UnderlineInputBorder(
                      borderSide: BorderSide(color: Color(0xFFD9D9D9)),
                    ),
                    focusedBorder: UnderlineInputBorder(
                      borderSide: BorderSide(color: Color(0xFFD9D9D9)),
                    ),
                  ),
                ),
                const SizedBox(height: 30),

                // ÎπÑÎ∞ÄÎ≤àÌò∏
                const Align(
                  alignment: Alignment.centerLeft,
                  child: Text(
                    'ÎπÑÎ∞ÄÎ≤àÌò∏',
                    style: TextStyle(fontWeight: FontWeight.bold),
                  ),
                ),
                TextField(
                  controller: _passwordController,
                  obscureText: true,
                  decoration: const InputDecoration(
                    isDense: true,
                    contentPadding: EdgeInsets.symmetric(vertical: 10),
                    enabledBorder: UnderlineInputBorder(
                      borderSide: BorderSide(color: Color(0xFFD9D9D9)),
                    ),
                    focusedBorder: UnderlineInputBorder(
                      borderSide: BorderSide(color: Color(0xFFD9D9D9)),
                    ),
                  ),
                ),
                const SizedBox(height: 20),

                // ÎßÅÌÅ¨
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    const Text(
                      'ÏïÑÏù¥Îîî Ï∞æÍ∏∞ | ÎπÑÎ∞ÄÎ≤àÌò∏ Ï∞æÍ∏∞ | ',
                      style: TextStyle(fontSize: 13, color: Color(0xFFBDBDBD)),
                    ),
                    GestureDetector(
                      onTap: () => Navigator.pushNamed(context, '/start'),
                      child: const Text(
                        'ÌöåÏõêÍ∞ÄÏûÖ',
                        style: TextStyle(
                          fontSize: 13,
                          color: Color(0xFFBDBDBD),
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ),
                  ],
                ),
                const SizedBox(height: 70),

                // Î°úÍ∑∏Ïù∏ Î≤ÑÌäº
                SizedBox(
                  width: double.infinity,
                  height: 55,
                  child: ElevatedButton(
                    onPressed: _login,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: const Color(0xFF54D2A7),
                      shape: const StadiumBorder(),
                    ),
                    child: const Text(
                      'Î°úÍ∑∏Ïù∏',
                      style: TextStyle(
                        fontSize: 18,
                        color: Colors.white,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
